<FFrame>
    radius: ['16dp']
    shadow_radius: [(self.radius[0] / 2) + dp(2), ]
    # shadow_color: 
    #     ((self.theme_cls.shadowColor if not self.disabled \
    #     else self.theme_cls.shadowColor[:-1] + [.5]) \
    #     if self.theme_shadow_color == "Primary" else \
    #     (self.shadow_color if not self.disabled \
    #     else self.shadow_color[:-1] + [.5])) \
    #     if self.style == 'elevated' \
    #     else self.theme_cls.transparentColor
    shadow_offset: 
        ([0,-2] if self.theme_shadow_offset == "Primary" \
        else self.shadow_offset) \
        if self.style == 'elevated' else [0,0]
    shadow_softness:
        (dp(4) if self.theme_shadow_softness == "Primary" \
        else self.shadow_softness) \
        if self.style == 'elevated' else 0
    elevation_level:
        (1 if self.theme_elevation_level == "Primary" \
        else self.elevation_level) \
        if self.style == 'elevated' else 0
    elevation: self.elevation_levels[self.elevation_level]
    line_color:
        ((self.theme_cls.outlineColor if not self.disabled \
        else self.theme_cls.onSurfaceColor[:-1] + [self.disabled_bg_opacity]) \
        if self.theme_line_color == "Primary" else \
        (self.line_color if not self.disabled \
        else self.line_color[:-1] + [self.disabled_bg_opacity])) \
        if self.style == 'outlined' \
        else self.theme_cls.transparentColor
    md_bg_color:
        ( \
        { \
        "filled": app.theme_cls.surfaceContainerHighestColor, \
        "outlined": app.theme_cls.surfaceColor, \
        "elevated": app.theme_cls.surfaceContainerLowColor, \
        }[self.style] \
        if self.theme_bg_color == "Primary" else \
        self.md_bg_color)


<FCard>
    ripple_color: self.state_layer_color[:-1] + [self._state+.1]
    ripple_alpha: self._state + .1


<FCardSwipe>
    md_bg_color:
        app.theme_cls.secondaryContainerColor \
        if self.theme_bg_color == "Primary" else \
        self.md_bg_color
